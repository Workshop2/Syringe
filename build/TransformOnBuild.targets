<?xml version="1.0" encoding="utf-8"?>
<!--
   Based on code from Clarius Consulting

   Copyright 2014 Clarius Consulting SA

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
                File.WriteAllText(
                    OutputFilename,
                    Regex.Replace(File.ReadAllText(InputFilename), MatchExpression, ReplacementText)
                    );
              ]]>
			</Code>
		</Task>
	</UsingTask>

	<PropertyGroup>
		<_CommonProgramFiles>$([System.Environment]::GetEnvironmentVariable('CommonProgramFiles(x86)'))</_CommonProgramFiles>
		<_CommonProgramFiles Condition=" '$(_CommonProgramFiles)' == '' ">$(CommonProgramFiles)</_CommonProgramFiles>
		<TextTransformPath Condition="'$(TextTransformPath)' == ''">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\$(VisualStudioVersion)\TextTransform.exe</TextTransformPath>
		<!-- Initial default value -->
		<_TransformExe>$(TextTransformPath)</_TransformExe>
		<!-- Cascading probing if file not found -->
		<_TransformExe Condition="!Exists('$(_TransformExe)')">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\10.0\TextTransform.exe</_TransformExe>
		<_TransformExe Condition="!Exists('$(_TransformExe)')">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\11.0\TextTransform.exe</_TransformExe>
		<_TransformExe Condition="!Exists('$(_TransformExe)')">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\12.0\TextTransform.exe</_TransformExe>
		<!-- Future proof 'til VS2013+2 -->
		<_TransformExe Condition="!Exists('$(_TransformExe)')">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\13.0\TextTransform.exe</_TransformExe>
		<_TransformExe Condition="!Exists('$(_TransformExe)')">$(_CommonProgramFiles)\Microsoft Shared\TextTemplating\14.0\TextTransform.exe</_TransformExe>
	</PropertyGroup>

	<Target Name="TransformOnBuild" BeforeTargets="Build">

		<Error Text="Failed to find TextTransform.exe tool at '$(_TransformExe)."
						Condition="!Exists('$(_TransformExe)')"/>

		<ItemGroup>
			<_TextTransform Include="@(None)"
											Condition="'%(None.Generator)' == 'TextTemplatingFileGenerator'" />
		</ItemGroup>

		<PropertyGroup>
			<_TransformExeDest>%(_TextTransform.RootDir)%(_TextTransform.Directory)</_TransformExeDest>
		</PropertyGroup>

		<Copy SourceFiles="$(_TransformExe)" DestinationFolder="$(_TransformExeDest)"/>

		<ReplaceFileText InputFilename="%(_TextTransform.FullPath)" OutputFilename="%(_TextTransform.FullPath)_temp.tt" MatchExpression="\$\(SolutionDir\)" ReplacementText="$(SolutionDir)" />
		<ReplaceFileText InputFilename="%(_TextTransform.FullPath)_temp.tt" OutputFilename="%(_TextTransform.FullPath)_temp.tt" MatchExpression="\$\(Configuration\)" ReplacementText="$(Configuration)" />

		<!-- Perform task batching for each file -->
		<Exec Command="&quot;$(_TransformExeDest)\TextTransform.exe&quot; &quot;%(_TextTransform.FullPath)_temp.tt&quot; -out &quot;$(_TransformExeDest)%(_TextTransform.LastGenOutput)&quot;"
					Condition="'%(_TextTransform.Identity)' != ''"/>

		<Delete Files="$(_TransformExeDest)\TextTransform.exe;%(_TextTransform.FullPath)_temp.tt" />

	</Target>

</Project>